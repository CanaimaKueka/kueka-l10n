#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# COPYRIGHT: C) 2012 Erick Manuel Birbe Salazar <erickcion@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# COPYING file for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

import operator
import os

MYDIR = os.path.dirname(os.path.realpath(__file__))

I18N_PACKAGES = None
if not I18N_PACKAGES:
    f = open(MYDIR + '/locales_manual.dict', 'r')
    data = f.read()
    I18N_PACKAGES = eval(data)


def resolv_conflict(pkgs):
    '''Resuelve el conflicto generado entre hunspell y myspell que no 
    permite instalarlos juntos. Para resolverlos inserta ambas
    dependencias en una lista [myspell-ru, hunspell-ru]'''
    i=0
    rmv=[]
    for p in pkgs:
        if 'myspell' in p or 'hunspell' in p:
            i+=1
            rmv.append(p)
    if i>=2:
        pkgs.remove(rmv[0])
        pkgs.remove(rmv[1])
        # Ordenamos para que myspell quede de primero
        rmv.reverse()
        pkgs.append(rmv)
    return pkgs


if __name__ == "__main__":
    print """# DO NOT EDIT THIS FILE
# This file is automatically generated by '{}'
{{""".format(os.path.basename(__file__))
    for lang in sorted(I18N_PACKAGES.iterkeys()):
        if len(I18N_PACKAGES[lang]) > 0:
            orig_list = resolv_conflict(I18N_PACKAGES[lang])
            #orig_list.sort()
            print "\t'{0}': {1},".format(lang, orig_list)
    print "}"
